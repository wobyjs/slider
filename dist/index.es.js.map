{"version":3,"file":"index.es.js","sources":["../src/utils.tsx","../src/slider.tsx"],"sourcesContent":["/**\r\n * Capitalize first letter of string\r\n * @private\r\n * @param  {string} - String\r\n * @return {string} - String with first letter capitalized\r\n */\r\nexport function capitalize(str: string): string {\r\n    return str.charAt(0).toUpperCase() + str.substr(1)\r\n}\r\n\r\n/**\r\n * Clamp position between a range\r\n * @param  {number} - Value to be clamped\r\n * @param  {number} - Minimum value in range\r\n * @param  {number} - Maximum value in range\r\n * @return {number} - Clamped value\r\n */\r\nexport function clamp(value, min, max) {\r\n    return Math.min(Math.max(value, min), max)\r\n}\r\n","import { $, $$, useEffect, useMemo, ObservableMaybe, type JSX, ObservableReadonly, Observable, Child } from \"voby\"\r\nimport { capitalize, clamp } from \"./utils\"\r\n\r\n// /https://whoisandy.github.io/react-rangeslider/\r\n\r\ntype Orientation = \"horizontal\" | \"vertical\"\r\n\r\ninterface SliderProps {\r\n    min?: ObservableMaybe<number>\r\n    max?: ObservableMaybe<number>\r\n    step?: ObservableMaybe<number>\r\n    value?: Observable<number>\r\n    orientation?: ObservableMaybe<Orientation>\r\n    tooltip?: ObservableMaybe<boolean>\r\n    alwaysOnTooltip?: ObservableMaybe<boolean>\r\n    reverse?: ObservableMaybe<boolean>\r\n    labels?: ObservableMaybe<Record<string, JSX.Child>>\r\n    formatLabel?: (value: ObservableMaybe<number>) => JSX.Child\r\n    formatTooltip?: (value: ObservableMaybe<number>) => JSX.Child\r\n    onChangeStart?: (e: MouseEvent | TouchEvent) => void\r\n    onChange?: (value: number, e: MouseEvent | TouchEvent | KeyboardEvent) => void\r\n    onChangeComplete?: (e: MouseEvent | TouchEvent) => void\r\n    class?: ObservableMaybe<string>\r\n    className?: ObservableMaybe<string>\r\n}\r\n\r\nconst constants = {\r\n    orientation: {\r\n        horizontal: {\r\n            dimension: \"width\",\r\n            direction: \"left\",\r\n            reverseDirection: \"right\",\r\n            coordinate: \"x\",\r\n        },\r\n        vertical: {\r\n            dimension: \"height\",\r\n            direction: \"top\",\r\n            reverseDirection: \"bottom\",\r\n            coordinate: \"y\",\r\n        },\r\n    },\r\n}\r\n\r\nexport const Slider = (props: SliderProps & JSX.HTMLAttributes<HTMLDivElement>) => {\r\n    const {\r\n        min = $(0),\r\n        max = $(100),\r\n        step = $(1),\r\n        value = $(0),\r\n        orientation = $(\"horizontal\"),\r\n        tooltip = $(true),\r\n        alwaysOnTooltip = $(false),\r\n        reverse = $(false),\r\n        labels = $({}),\r\n        formatLabel = $(\"\"),\r\n        formatTooltip,\r\n        onChangeStart,\r\n        onChange,\r\n        onChangeComplete,\r\n    } = props\r\n\r\n    const active = $<boolean>(false)\r\n    const limit = $<number>(0)\r\n    const grab = $<number>(0)\r\n    const sliderRef = $<HTMLDivElement>()\r\n    const handleRef = $<HTMLDivElement>()\r\n    const tooltipRef = $<HTMLDivElement>()\r\n    const labelsRef = $<HTMLUListElement>()\r\n    const sliderValue = $($$(value))\r\n    const sliderDim = $(0)\r\n    const handleDim = $(0)\r\n\r\n    useEffect(() => {\r\n        sliderValue($$(value))\r\n    })\r\n    const handleTooltip = (value: number): JSX.Child => {\r\n        return formatTooltip ? formatTooltip(value) : value\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (!$$(sliderRef) || !$$(handleRef)) {\r\n            return\r\n        }\r\n        const dimension = capitalize(constants.orientation[$$(orientation)].dimension)\r\n        sliderDim($$(sliderRef)[`offset${$$(dimension)}`])\r\n        handleDim($$(handleRef)[`offset${$$(dimension)}`])\r\n\r\n        limit(sliderDim() - handleDim())\r\n        grab(handleDim() / 2)\r\n    }\r\n\r\n    const handleStart = (e: MouseEvent | TouchEvent) => {\r\n        document.addEventListener(\"mousemove\", handleDrag)\r\n        document.addEventListener(\"mouseup\", handleEnd)\r\n        active(true)\r\n        onChangeStart?.(e)\r\n    }\r\n\r\n    const handleDrag = (e: MouseEvent | TouchEvent) => {\r\n        e.stopPropagation()\r\n        if (!onChange) return\r\n\r\n        const {\r\n            //@ts-ignore\r\n            target: { className, classList, dataset },\r\n        } = e\r\n\r\n        if (className === \"rangesliderLabels\") return\r\n\r\n        sliderValue(position(e))\r\n\r\n        if (classList?.contains(\"rangesliderLabel-item\") && dataset.value) {\r\n            sliderValue(parseFloat(dataset.value))\r\n        }\r\n        onChange?.($$(sliderValue), e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleUpdate()\r\n        const resizeObserver = new ResizeObserver(handleUpdate)\r\n        if ($$(sliderRef)) {\r\n            resizeObserver.observe($$(sliderRef))\r\n        }\r\n\r\n        return () => {\r\n            resizeObserver.disconnect()\r\n        }\r\n    })\r\n\r\n    const handleEnd = (e: MouseEvent | TouchEvent) => {\r\n        active(false)\r\n        onChangeComplete?.(e)\r\n        value($$(sliderValue))\r\n        document.removeEventListener(\"mousemove\", handleDrag)\r\n        document.removeEventListener(\"mouseup\", handleEnd)\r\n    }\r\n\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n        e.preventDefault()\r\n        const { keyCode } = e\r\n        // let sliderValue\r\n\r\n        switch (keyCode) {\r\n            case 38:\r\n            case 39:\r\n                sliderValue($$(value) + $$(step) > $$(max) ? $$(max) : $$(value) + $$(step))\r\n                onChange?.($$(sliderValue), e)\r\n                break\r\n            case 37:\r\n            case 40:\r\n                sliderValue($$(value) - $$(step) < $$(min) ? $$(min) : $$(value) - $$(step))\r\n                onChange?.($$(sliderValue), e)\r\n                break\r\n            default:\r\n        }\r\n    }\r\n\r\n    const getPositionFromValue = (value: number, isLabel = false): number => {\r\n        const diffMaxMin = $$(max) - $$(min)\r\n        const diffValMin = value - $$(min)\r\n        const percentage = diffValMin / diffMaxMin\r\n        // const pos = Math.round(percentage * ($$(limit) +\r\n        //     ($$(reverse) ?\r\n        //         ($$(isHorizontal) ? 0 : +$$(grab) * 2) :\r\n        //         ($$(isHorizontal) ? 0 : 0))\r\n        // ) - ($$(reverse) ?\r\n        //     ($$(isHorizontal) ? $$(grab) * 2 : -$$(grab) * 2) :\r\n        //     ($$(isHorizontal) ? $$(grab) * 2 : 0))\r\n        // )\r\n        const pos = Math.round(percentage * (isLabel ? $$(sliderDim) : $$(limit)))\r\n\r\n        return pos\r\n    }\r\n\r\n    const isHorizontal = useMemo(() => $$(orientation) === 'horizontal')\r\n\r\n    const getValueFromPosition = (pos: number): number => {\r\n        const percentage = clamp(pos, 0, $$(limit)) / ($$(limit) || 1)\r\n        const baseVal = $$(step) * Math.round((percentage * ($$(max) - $$(min))) / $$(step))\r\n        const result = $$(isHorizontal) ? baseVal + $$(min) : $$(max) - baseVal\r\n        return clamp(result, $$(min), $$(max))\r\n    }\r\n\r\n    const position = (e: MouseEvent | TouchEvent) => {\r\n        const coordinateStyle = constants.orientation[$$(orientation)].coordinate\r\n        const directionStyle = $$(reverse)\r\n            ? constants.orientation[$$(orientation)].reverseDirection\r\n            : constants.orientation[$$(orientation)].direction\r\n        const clientCoordinateStyle = `client${capitalize(coordinateStyle)}`\r\n        const coordinate = !(\"touches\" in e)\r\n            ? (e as MouseEvent)[clientCoordinateStyle]\r\n            : (e.touches[0] as Touch)[clientCoordinateStyle]\r\n        const direction = $$(sliderRef)!.getBoundingClientRect()[directionStyle]\r\n        // const pos = $$(reverse)\r\n        //     ? ($$(isHorizontal) ? (direction - coordinate) : ($$(limit) - (direction - coordinate /* - ($$(grab) * 2) */)))\r\n        //     : $$(limit) - (coordinate - direction + ($$(grab)))\r\n\r\n        const pos = $$(reverse)\r\n            ? direction - coordinate - $$(grab)\r\n            : coordinate - direction - $$(grab)\r\n\r\n        sliderValue(getValueFromPosition(pos))\r\n        return sliderValue\r\n    }\r\n\r\n    const coordinates = (pos: number, isLabel = false) => {\r\n        const value = getValueFromPosition(pos)\r\n        const position = getPositionFromValue(value, isLabel)\r\n        // const handlePos = $$(reverse) ?\r\n        //     ($$(isHorizontal) ? ($$(limit) - position + ($$(grab))) : ($$(limit) - position + ($$(grab)))) :\r\n        //     ($$(isHorizontal) ? ($$(limit) - position - $$(grab)) : ($$(limit) - position - $$(grab)))\r\n        // const fillPos = $$(reverse) ?\r\n        //     ($$(isHorizontal) ? handlePos + $$(grab) : $$(limit) - handlePos) :\r\n        //     ($$(isHorizontal) ? $$(limit) - handlePos : handlePos)\r\n\r\n        const handlePos = $$(isHorizontal) ? position + $$(grab) : position\r\n        const fillPos = $$(isHorizontal) ? handlePos : $$(limit) - handlePos\r\n\r\n        // console.log('coords', pos, value, position, handlePos, fillPos)\r\n        return {\r\n            fill: fillPos,\r\n            handle: handlePos,\r\n            label: handlePos\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const renderLabels = (labels: ObservableReadonly<Record<string, JSX.Child>>) => (\r\n        <ul ref={labelsRef} className={[\"rangesliderLabels relative select-none\",\r\n            () => $$(isHorizontal) ? 'left-[-15px] top-[20px]' : 'left-[15px] top-[8px]'\r\n        ]}\r\n        >\r\n            {$$(labels)}\r\n        </ul >\r\n    )\r\n\r\n\r\n    const labelItems = useMemo(() => {\r\n        const _l = $$(limit)\r\n\r\n        let labelItems = []\r\n        let labelKeys = Object.keys($$(labels)).map(r => +r)\r\n\r\n        if (labelKeys.length > 0) {\r\n            labelKeys = labelKeys.sort((a, b) => ($$(reverse) ? a - b : b - a))\r\n\r\n            for (let key of labelKeys) {\r\n                const labelPosition = getPositionFromValue(key)\r\n                // const labelPosition2 = getPositionFromValue(key)\r\n                const labelCoords = coordinates(labelPosition, !$$(isHorizontal))\r\n                const labelStyle = {\r\n                    [constants.orientation[$$(orientation)].direction]: `${labelCoords.label}px`\r\n                }\r\n\r\n                console.log('labels', $$(limit), labelCoords.label)\r\n\r\n                labelItems.push(\r\n                    <li\r\n                        className={[\r\n                            //`\r\n\r\n                            // absolute text-sm cursor-pointer inline-block top-2.5 \r\n                            // [transform:translate3d(-50%,0,0)]\r\n                            //   `,\r\n                            `rangesliderLabel-item  absolute`,\r\n                            () => $$(isHorizontal) ? '' : `list-none text-left h-full ml-6 mr-0 my-0 p-0\r\n                            before:content-[''] before:w-[10px] before:h-[1px] before:absolute before:z-[1] before:-left-3.5 before:top-2/4\r\n                            before:[transform:translate3d(0,-50%,0)] before:bg-[black] list-none`\r\n                        ]}\r\n                        data-value={key}\r\n                        onMouseDown={handleDrag}\r\n                        onTouchStart={handleStart}\r\n                        onTouchEnd={handleEnd}\r\n                        style={labelStyle}\r\n                    >\r\n                        {$$(labels)[key]}\r\n                    </li>\r\n                )\r\n            }\r\n        }\r\n        return labelItems\r\n    })\r\n\r\n\r\n    const showTooltip = useMemo(() => $$(tooltip) && ($$(active) || $$(alwaysOnTooltip)))\r\n\r\n    const coords = useMemo(() => {\r\n        const positionVal = getPositionFromValue($$(sliderValue))\r\n        return coordinates($$(positionVal))\r\n    })\r\n    const fillStyle = useMemo(() => {\r\n        const dimension = constants.orientation[$$(orientation)].dimension\r\n        return { [$$(dimension)]: `${$$(coords).fill}px` }\r\n    })\r\n    const handleStyle = useMemo(() => {\r\n        const direction = useMemo(() => $$(reverse)\r\n            ? constants.orientation[$$(orientation)].reverseDirection\r\n            : constants.orientation[$$(orientation)].direction)\r\n        return { [$$(direction)]: `${$$(coords).handle}px` }\r\n    })\r\n\r\n    return (\r\n        <div\r\n            ref={sliderRef}\r\n            class={[\r\n                \"rangeslider relative bg-[#e6e6e6] touch-none mx-0 my-5\",\r\n                () => `rangeslider-${$$(orientation)}`,\r\n                () => $$(reverse) ? \"rangeslider-reverse\" : \"\",\r\n                () => $$(isHorizontal) ? 'h-3 rounded-[10px]' :\r\n                    'h-[150px] max-w-[10px] mx-auto my-5',\r\n                props.class ?? props.className,\r\n            ]}\r\n            onMouseDown={handleDrag}\r\n            onMouseUp={handleEnd}\r\n            onTouchStart={handleStart}\r\n            onTouchEnd={handleEnd}\r\n\r\n            // class={props.class ?? props.className}\r\n            style={props.style}\r\n\r\n        >\r\n            <div className={[\"rangesliderFill block shadow-[inset_0_1px_3px_rgba(0,0,0,0.4)] absolute\",\r\n                () => $$(isHorizontal) ? 'h-full bg-[#7cb342] rounded-[10px] top-0' + ($$(reverse) ? ' right-0' : '') :\r\n                    ' w-full bg-[#7cb342] shadow-none bottom-0' + ($$(reverse) ? ' top-0' : ''),\r\n\r\n            ]} style={fillStyle} />\r\n            <div\r\n                ref={handleRef}\r\n                className={[\"rangesliderHandle bg-white border cursor-pointer inline-block absolute shadow-[0_1px_3px_rgba(0,0,0,0.4),0_-1px_3px_rgba(0,0,0,0.4)] border-solid border-[#ccc] \",\r\n                    () => $$(isHorizontal) ? 'w-[30px] h-[30px] rounded-[30px] top-2/4 after:content-[\"_\"] after:absolute after:w-4 after:h-4 after:bg-[#dadada] after:shadow-[0_1px_3px_rgba(0,0,0,0.4)_inset,0_-1px_3px_rgba(0,0,0,0.4)_inset] after:rounded-[50%] after:left-1.5 after:top-1.5 [transform:translate3d(-50%,-50%,0)]' :\r\n                        'absolute w-[30px] h-2.5 shadow-none -left-2.5',\r\n\r\n                ]}\r\n                onMouseDown={handleStart}\r\n                onTouchMove={handleDrag}\r\n                onTouchEnd={handleEnd}\r\n                onKeyDown={handleKeyDown}\r\n                style={handleStyle}\r\n                tabIndex={0}\r\n            >\r\n                {() => $$(showTooltip) ? (\r\n                    <div ref={tooltipRef} className={[\"rangesliderHandle-tooltip w-10 h-10 text-center absolute bg-[rgba(0,0,0,0.8)] font-[normal] text-sm transition-all duration-100 ease-[ease-in] rounded inline-block text-[white] after:content-[' _'] after:absolute after:w-0 after:h-0 select-none\",\r\n                        () => $$(isHorizontal) ? 'top-[-55px] after:border-t-8 after:border-t-[rgba(0,0,0,0.8)] after:border-x-8 after:border-x-transparent after:border-solid after:left-2/4 left-2/4 after:-bottom-2 after:[transform:translate3d(-50%,0,0)] [transform:translate3d(-50%,0%,0)]' :\r\n                            '-left-full top-2/4 after:border-l-8 after:border-l-[rgba(0,0,0,0.8)] after:border-y-8 after:border-y-transparent after:border-solid after:left-full after:top-3 [transform:translate3d(-50%,-50%,0)]',\r\n                        () => $$(reverse) ? ($$(isHorizontal) ? 'right-0' : 'top-0 bottom-[inherit]') : '',\r\n                    ]}>\r\n                        <span class='inline-block leading-[100%] mt-3'>{() => handleTooltip($$(sliderValue))}</span>\r\n                    </div>\r\n                ) : null}\r\n                <div className=\"rangesliderHandle-label select-none\">{formatLabel}</div>\r\n            </div>\r\n            {() => labels ? renderLabels(labelItems as any) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"names":["value","position","labels","labelItems"],"mappings":"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"}